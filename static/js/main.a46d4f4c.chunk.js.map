{"version":3,"sources":["data.js","screens/HomeScreen.js","screens/ProductScreen.js","App.js","serviceWorker.js","index.js"],"names":["products","id","name","category","image","price","brand","HomeScreen","props","className","data","map","product","key","to","src","alt","ProductScreen","find","x","match","params","er_count","placeOrder","phoneNumber","document","getElementById","value","console","log","axios","post","then","response","alert","catch","error","description","status","type","onClick","App","querySelector","classList","add","remove","href","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a46d4f4c.chunk.js","sourcesContent":["export default  {\r\n products : [{\r\n     id:1,\r\n     name:'Black Sport Tshirt',\r\n     category:'Sport Shirts',\r\n     image:'/images/d1.jpg',\r\n     price:' 2500',\r\n     brand:'Addidas'\r\n },\r\n {\r\n    id:2,\r\n    name:'Orange Casual Tshirt',\r\n    category:'Shirts',\r\n    image:'/images/d5.jpg',\r\n    price:' 2000',\r\n    brand:'Addidas'\r\n},\r\n{\r\n    id:3,\r\n    name:'Orange Casual Tshirt',\r\n    category:'Shirts',\r\n    image:'/images/d3.jpg',\r\n    price:' 2000',\r\n    brand:'Addidas'\r\n},\r\n{\r\n    id:4,\r\n    name:'Grey Casual Tshirt',\r\n    category:'Shirts',\r\n    image:'/images/d4.jpg',\r\n    price:' 2000',\r\n    brand:'Addidas'\r\n},\r\n{\r\n    id:5,\r\n    name:'White Sport Tshirt',\r\n    category:'Shirts',\r\n    image:'/images/d1.jpg',\r\n    price:' 2500',\r\n    brand:'Addidas'\r\n},\r\n{\r\n    id:6,\r\n    name:'Black Casual Tshirt',\r\n    category:'Sport Shirts',\r\n    image:'/images/d2.jpg',\r\n    price:' 2000',\r\n    brand:'Addidas'\r\n},\r\n{\r\n    id:7,\r\n    name:'Black Dress',\r\n    category:'Dresses',\r\n    image:'/images/d7.jpg',\r\n    price:' 2500',\r\n    brand:'Goodthreads '\r\n},\r\n{\r\n    id:8,\r\n    name:'Blue Dress',\r\n    category:'Dresses',\r\n    image:'/images/d8.jpg',\r\n    price:' 2000',\r\n    brand:'Goodthreads '\r\n}\r\n]\r\n}\r\n","import React from 'react';\r\nimport data from '../data';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction HomeScreen(props) {\r\n    return <ul className=\"products\">\r\n        {\r\n            data.products.map(product =>\r\n                <li key={product.id}>\r\n                    <div className=\"product\">\r\n                        <Link to={'/product/'+ product.id}> <img className=\"product-image \" src={product.image} alt=\"black tshirt\" /></Link>\r\n\r\n                    </div>\r\n                    <div className=\"product-name\">\r\n                        <Link to={'/product/'+ product.id}>{product.name}</Link> </div>\r\n                    <div className=\"product-brand\">{product.brand}</div>\r\n                    <div className=\"product-price\">{product.price}</div>\r\n                </li>\r\n            )\r\n        }\r\n    </ul>\r\n}\r\nexport default HomeScreen","import React, { useEffect } from 'react';\r\nimport data from '../data';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction ProductScreen(props) {\r\n    const product = data.products.find(x => x.id == props.match.params.id);\r\n    let er_count = 1;\r\n    function placeOrder() {\r\n        let phoneNumber = document.getElementById(\"phnum\").value;\r\n        let url = \"https://c8qetqah41.execute-api.us-east-1.amazonaws.com/dev/\";\r\n        let data = { \"id\": product.id, \"name\": product.name, \"brand\": product.brand, \"price\": product.price, \"phoneNo\": phoneNumber };\r\n        console.log(data);\r\n\r\n axios.post(url, data).then(function (response) {\r\n    console.log(response);\r\n            alert(response.data);\r\n        }).catch(function (error) {\r\n            er_count = er_count + 1;\r\n            retry(er_count);\r\n        })\r\n    }\r\n    function retry(count) {\r\n        if (count < 6) {\r\n            placeOrder();\r\n        } \r\n    }\r\n\r\n    return <div >\r\n        <div className=\"back-to-result\">\r\n            <Link to=\"/\">Back to result</Link>\r\n        </div>\r\n        <div className=\"details\">\r\n            <div className=\"details-image\">\r\n                <img src={product.image} alt=\"product\" ></img>\r\n            </div>\r\n            <div className=\"details-info\">\r\n                <ul>\r\n                    <li><h4>{product.name}</h4></li>\r\n                    <li>{product.brand}</li>\r\n                    <li><b>{product.description}</b></li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"details-action\">\r\n                <ul>\r\n                    <li>Price:  Rs{product.price}</li>\r\n                    <li>Status :{product.status}</li>\r\n                    <li>QTY:<select>\r\n                        <option>1</option>\r\n                        <option>2</option>\r\n                        <option>3</option>\r\n                    </select> </li>\r\n\r\n                    <input type=\"text\" id=\"phnum\" name=\"PN\"></input>\r\n                    <button onClick={placeOrder} className=\"button\">ORDER</button>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\nexport default ProductScreen;"," import React from 'react';\nimport data from './data';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport {BrowserRouter,Route,Link} from 'react-router-dom';\n\nfunction App() {\nconst openMenu=() =>(\n  document.querySelector(\".sidebar\").classList.add(\"open\")\n)\nconst closeMenu=() =>(\n  document.querySelector(\".sidebar\").classList.remove(\"open\")\n)\n\n  return (\n    <BrowserRouter>\n    <div className=\"grid-container\">\n    <header className=\"header\">\n       <div className=\"brand\">\n           <button onClick={openMenu}>\n               &#9776;\n           </button>\n          <Link to=\"/\">SHOPMANDU</Link>\n       </div>\n       {/* <div className=\"header-links\"> \n           <a href=\"cart.html\">Cart</a>\n           <a href=\"signin.html\">Signin</a>\n       </div> */}\n    </header>\n    <aside className=\"sidebar\">\n        <div><h3>Shopping Categories</h3>\n        <button className=\"sidebar-close-button\" onClick={closeMenu}>X</button></div>\n        <ul>\n            <li>\n                <a href=\"index.html\"> Pants</a>\n            </li>\n            <li>\n                <a href=\"index.html\"> Shirts</a>\n            </li>\n        </ul>\n\n    </aside>\n    <main className=\"main\">\n        <div className=\"content\">\n          <Route path=\"/product/:id\" component ={ProductScreen} />\n          <Route path=\"/\" exact={true} component={HomeScreen}/>\n            \n        </div>\n        \n    </main>\n    <footer className=\"footer \">\n       ALL RIGHT RESERVED\n    </footer>\n\n</div> \n</BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}